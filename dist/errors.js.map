{"version":3,"file":"errors.js","names":["UriError","WAMP_ERROR_MSG","URI_ERROR","name","code","Error","NoBrokerError","NO_BROKER","NoCallbackError","NO_CALLBACK_SPEC","InvalidParamError","parameter","INVALID_PARAM","NoSerializerAvailableError","NO_SERIALIZER_AVAILABLE","NonExistUnsubscribeError","NON_EXIST_UNSUBSCRIBE","NoDealerError","NO_DEALER","RPCAlreadyRegisteredError","RPC_ALREADY_REGISTERED","NonExistRPCUnregistrationError","NON_EXIST_RPC_UNREG","NonExistRPCInvocationError","NON_EXIST_RPC_INVOCATION","NonExistRPCReqIdError","NON_EXIST_RPC_REQ_ID","NoRealmError","NO_REALM","NoWsOrUrlError","NO_WS_OR_URL","NoCRACallbackOrIdError","NO_CRA_CB_OR_ID","errorUri","ChallengeExceptionError","CHALLENGE_EXCEPTION","PPTNotSupportedError","PPT_NOT_SUPPORTED","PPTInvalidSchemeError","PPT_INVALID_SCHEME","PPTSerializerInvalidError","PPT_SRLZ_INVALID","PPTSerializationError","PPT_SRLZ_ERR","ProtocolViolationError","details","PROTOCOL_VIOLATION","AbortError","error","WAMP_ABORT","WampError","argsList","argsDict","WAMP_GENERAL_ERROR","SubscribeError","UnsubscribeError","PublishError","RegisterError","UnregisterError","CallError","WebsocketError","WEBSOCKET_ERROR"],"sources":["../src/errors.js"],"sourcesContent":["import { WAMP_ERROR_MSG } from './constants.js';\n\nexport class UriError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.URI_ERROR);\n        this.name = 'UriError';\n        this.code = 1;\n    }\n}\n\nexport class NoBrokerError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NO_BROKER);\n        this.name = 'NoBrokerError';\n        this.code = 2;\n    }\n}\n\nexport class NoCallbackError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NO_CALLBACK_SPEC);\n        this.name = 'NoCallbackError';\n        this.code = 3;\n    }\n}\n\nexport class InvalidParamError extends Error {\n    constructor (parameter) {\n        super(WAMP_ERROR_MSG.INVALID_PARAM);\n        this.name = 'InvalidParamError';\n        this.code = 4;\n        this.parameter = parameter;\n    }\n}\n\nexport class NoSerializerAvailableError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NO_SERIALIZER_AVAILABLE);\n        this.name = 'NoSerializerAvailableError';\n        this.code = 6;\n    }\n}\n\nexport class NonExistUnsubscribeError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NON_EXIST_UNSUBSCRIBE);\n        this.name = 'NonExistUnsubscribeError';\n        this.code = 7;\n    }\n}\n\nexport class NoDealerError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NO_DEALER);\n        this.name = 'NoDealerError';\n        this.code = 12;\n    }\n}\n\nexport class RPCAlreadyRegisteredError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.RPC_ALREADY_REGISTERED);\n        this.name = 'RPCAlreadyRegisteredError';\n        this.code = 15;\n    }\n}\n\nexport class NonExistRPCUnregistrationError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NON_EXIST_RPC_UNREG);\n        this.name = 'NonExistRPCUnregistrationError';\n        this.code = 17;\n    }\n}\n\nexport class NonExistRPCInvocationError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NON_EXIST_RPC_INVOCATION);\n        this.name = 'NonExistRPCInvocationError';\n        this.code = 19;\n    }\n}\n\nexport class NonExistRPCReqIdError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NON_EXIST_RPC_REQ_ID);\n        this.name = 'NonExistRPCReqIdError';\n        this.code = 20;\n    }\n}\n\nexport class NoRealmError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NO_REALM);\n        this.name = 'NoRealmError';\n        this.code = 21;\n    }\n}\n\nexport class NoWsOrUrlError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NO_WS_OR_URL);\n        this.name = 'NoWsOrUrlError';\n        this.code = 22;\n    }\n}\n\nexport class NoCRACallbackOrIdError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.NO_CRA_CB_OR_ID);\n        this.name = 'NoCRACallbackOrIdError';\n        this.code = 23;\n        this.errorUri = 'wamp.error.cannot_authenticate';\n    }\n}\n\nexport class ChallengeExceptionError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.CHALLENGE_EXCEPTION);\n        this.name = 'ChallengeExceptionError';\n        this.code = 24;\n        this.errorUri = 'wamp.error.cannot_authenticate';\n    }\n}\n\nexport class PPTNotSupportedError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.PPT_NOT_SUPPORTED);\n        this.name = 'PPTNotSupportedError';\n        this.code = 25;\n    }\n}\n\nexport class PPTInvalidSchemeError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.PPT_INVALID_SCHEME);\n        this.name = 'PPTInvalidSchemeError';\n        this.code = 26;\n    }\n}\n\nexport class PPTSerializerInvalidError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.PPT_SRLZ_INVALID);\n        this.name = 'PPTSerializerInvalidError';\n        this.code = 27;\n    }\n}\n\nexport class PPTSerializationError extends Error {\n    constructor () {\n        super(WAMP_ERROR_MSG.PPT_SRLZ_ERR);\n        this.name = 'PPTSerializationError';\n        this.code = 28;\n    }\n}\n\nexport class ProtocolViolationError extends Error {\n    constructor (errorUri, details) {\n        super(details || WAMP_ERROR_MSG.PROTOCOL_VIOLATION);\n        this.name = 'ProtocolViolationError';\n        this.code = 29;\n        this.errorUri = errorUri;\n    }\n}\n\nexport class AbortError extends Error {\n    constructor ({ error, details }) {\n        super(WAMP_ERROR_MSG.WAMP_ABORT);\n        this.name = 'AbortedError';\n        this.code = 30;\n        this.errorUri = error;\n        this.details = details;\n    }\n}\n\nexport class WampError extends Error {\n    constructor ({ error, details, argsList, argsDict }) {\n        super(WAMP_ERROR_MSG.WAMP_GENERAL_ERROR);\n        this.name = 'WampError';\n        this.code = 31;\n        this.errorUri = error;\n        this.details = details;\n        this.argsList = argsList;\n        this.argsDict = argsDict;\n    }\n}\n\nexport class SubscribeError extends WampError {\n    constructor ({ error, details, argsList, argsDict }) {\n        super({ error, details, argsList, argsDict });\n        this.name = 'SubscribeError';\n        this.code = 32;\n    }\n}\n\nexport class UnsubscribeError extends WampError {\n    constructor ({ error, details, argsList, argsDict }) {\n        super({ error, details, argsList, argsDict });\n        this.name = 'UnsubscribeError';\n        this.code = 33;\n    }\n}\n\nexport class PublishError extends WampError {\n    constructor ({ error, details, argsList, argsDict }) {\n        super({ error, details, argsList, argsDict });\n        this.name = 'PublishError';\n        this.code = 34;\n    }\n}\n\nexport class RegisterError extends WampError {\n    constructor ({ error, details, argsList, argsDict }) {\n        super({ error, details, argsList, argsDict });\n        this.name = 'RegisterError';\n        this.code = 35;\n    }\n}\n\nexport class UnregisterError extends WampError {\n    constructor ({ error, details, argsList, argsDict }) {\n        super({ error, details, argsList, argsDict });\n        this.name = 'UnregisterError';\n        this.code = 36;\n    }\n}\n\nexport class CallError extends WampError {\n    constructor ({ error, details, argsList, argsDict }) {\n        super({ error, details, argsList, argsDict });\n        this.name = 'CallError';\n        this.code = 37;\n    }\n}\n\nexport class WebsocketError extends Error {\n    constructor (error) {\n        super(WAMP_ERROR_MSG.WEBSOCKET_ERROR);\n        this.name = 'WebsocketError';\n        this.code = 38;\n        this.error = error;\n    }\n}\n"],"mappings":"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"}