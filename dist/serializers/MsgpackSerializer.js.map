{"version":3,"sources":["../../src/serializers/MsgpackSerializer.js"],"names":["msgpack","MsgpackSerializer","protocol","isBinary","data","encode","Promise","resolve","type","constructor","name","decode","Uint8Array","reader","FileReader","onload","result","readAsArrayBuffer"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,uBAAhB;;IAEaC,iB;;;AACT,+BAAe;AAAA;;AACX,SAAKC,QAAL,GAAgB,SAAhB;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACH;;;;2BAEOC,I,EAAM;AACV,aAAOJ,OAAO,CAACK,MAAR,CAAeD,IAAf,CAAP;AACH;;;2BAEOA,I,EAAM;AACV,aAAO,IAAIE,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAE1B,YAAMC,IAAI,GAAGJ,IAAI,CAACK,WAAL,CAAiBC,IAA9B;;AAEA,YAAIF,IAAI,KAAK,aAAT,IAA0BA,IAAI,KAAK,QAAvC,EAAiD;AAC7CD,UAAAA,OAAO,CAACP,OAAO,CAACW,MAAR,CAAe,IAAIC,UAAJ,CAAeR,IAAf,CAAf,CAAD,CAAP;AACH,SAFD,MAEO;AACH,cAAMS,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,UAAAA,MAAM,CAACE,MAAP,GAAgB,YAAY;AACxBR,YAAAA,OAAO,CAACP,OAAO,CAACW,MAAR,CAAe,IAAIC,UAAJ,CAAe,KAAKI,MAApB,CAAf,CAAD,CAAP;AACH,WAFD;;AAIAH,UAAAA,MAAM,CAACI,iBAAP,CAAyBb,IAAzB;AACH;AAEJ,OAhBM,CAAP;AAiBH","sourcesContent":["import msgpack5 from 'msgpack5';\n\nconst msgpack = msgpack5();\n\nexport class MsgpackSerializer {\n    constructor () {\n        this.protocol = 'msgpack';\n        this.isBinary = true;\n    }\n\n    encode (data) {\n        return msgpack.encode(data);\n    }\n\n    decode (data) {\n        return new Promise(resolve => {\n\n            const type = data.constructor.name;\n\n            if (type === 'ArrayBuffer' || type === 'Buffer') {\n                resolve(msgpack.decode(new Uint8Array(data)));\n            } else {\n                const reader = new FileReader();\n\n                reader.onload = function () {\n                    resolve(msgpack.decode(new Uint8Array(this.result)));\n                };\n\n                reader.readAsArrayBuffer(data);\n            }\n\n        });\n    }\n}\n"],"file":"MsgpackSerializer.js"}